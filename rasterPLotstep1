import pandas as pd
import matplotlib.pyplot as plt

# Load the data from the provided files
bl_data = pd.read_excel('/mnt/data/BlRaster.xlsx')
clon30_data = pd.read_excel('/mnt/data/Clon30Raster.xlsx')
fs_data = pd.read_excel('/mnt/data/FsRaster.xlsx')

# Define the fixed durations for each segment
bl_duration_fixed = 15 * 60  # 15 minutes in seconds
fs_duration_fixed = 5 * 60   # 5 minutes in seconds
clon30_duration_fixed = 30 * 60  # 30 minutes in seconds

# Filter out BL data with timestamps past 15 minutes
bl_data_filtered = bl_data[bl_data['timestamp'] <= bl_duration_fixed]

# Adjust FS data to start at 900 seconds (15 minutes) for each unit
fs_data_adjusted = fs_data.copy()
unit_start_times_fs = fs_data_adjusted.groupby('unitID')['timestamp'].min()

for unit_id in unit_start_times_fs.index:
    first_spike_time = unit_start_times_fs[unit_id]
    fs_data_adjusted.loc[fs_data_adjusted['unitID'] == unit_id, 'timestamp'] = \
        900 + (fs_data_adjusted.loc[fs_data_adjusted['unitID'] == unit_id, 'timestamp'] - first_spike_time)

# Adjust Clon30 data to start at 1200 seconds (20 minutes) for each unit
clon30_data_adjusted = clon30_data.copy()
unit_start_times_clon30 = clon30_data_adjusted.groupby('unitID')['timestamp'].min()

for unit_id in unit_start_times_clon30.index:
    first_spike_time = unit_start_times_clon30[unit_id]
    clon30_data_adjusted.loc[clon30_data_adjusted['unitID'] == unit_id, 'timestamp'] = \
        1200 + (clon30_data_adjusted.loc[clon30_data_adjusted['unitID'] == unit_id, 'timestamp'] - first_spike_time)

# Combine the BL, adjusted FS, and adjusted Clon30 data
combined_bl_fs_clon30_data = pd.concat([bl_data_filtered, fs_data_adjusted, clon30_data_adjusted])

# Plotting the combined raster plot for BL, adjusted FS, and adjusted Clon30 data
plt.figure(figsize=(15, 10))

# Plot each event as a point
for unit_id in combined_bl_fs_clon30_data['unitID'].unique():
    unit_data = combined_bl_fs_clon30_data[combined_bl_fs_clon30_data['unitID'] == unit_id]
    plt.scatter(unit_data['timestamp'], [unit_id]*len(unit_data), s=1)

plt.xlabel('Time (s)')
plt.ylabel('Unit ID')
plt.title('Combined Raster Plot for BL (15 min), Adjusted FS, and Adjusted Clon30 Data')
plt.grid(True)
plt.show()
